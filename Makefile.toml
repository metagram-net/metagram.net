[tasks.dev]
description = "Start dev services and run the app, watching for changes"
run_task = { name = ["services", "tailwind", "esbuild", "run"], parallel = true }

[tasks.tailwind]
command = "npx"
args = [
    "tailwindcss",
    "--input", "./css/index.css",
    "--output", "./dist/css/index.css",
    "--watch",
]

[tasks.esbuild]
command = "node"
args = ["build.mjs", "watch"]

[tasks.run]
description = "Run the server"
command = "cargo"
args = ["run"]
watch = { watch = ["src", "templates", "Cargo.toml"] }

[tasks.db-wait]
description = "Wait for the dev database to become available"
script = "until psql -c 'select 1' > /dev/null; do sleep 1; done"

[tasks.db-reset]
description = "_Delete_ the dev database and re-seed it"
run_task = { name = ["services-down", "services", "db-wait", "migrate", "seed"] }

[tasks.migrate]
description = "Run database migrations"
command = "cargo"
args = [
    "run", "--bin", "dev",
    "--",
    "drift", "migrate",
]

[tasks.services]
description = "Start dev services and run the app with change watchers"
command = "docker-compose"
args = ["up", "--detach"]

[tasks.services-stop]
description = "Stop dev services"
command = "docker-compose"
args = ["stop"]

[tasks.services-down]
description = "_Destroy_ dev services (this deletes data!)"
command = "docker-compose"
args = ["down"]

[tasks.seed]
description = "Populate the database with some fake data"
command = "cargo"
args = [
    "run", "--bin", "dev",
    "--",
    "seed", "--stytch-user-id", "${STYTCH_USER_ID}",
]
